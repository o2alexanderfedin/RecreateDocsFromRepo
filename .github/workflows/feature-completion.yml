name: Feature Completion Workflow

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
    types: [closed]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run tests
        run: |
          pytest

  close-issues:
    name: Close Associated Issues
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get merged commits
        id: get-commits
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            # For direct pushes to develop, get all new commits
            COMMITS=$(git log --format="%H" origin/develop~1..origin/develop)
          else
            # For PRs, get all commits in the PR
            COMMITS=$(git log --format="%H" ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
          fi
          echo "commits=$COMMITS" >> $GITHUB_OUTPUT

      - name: Extract issue numbers from commit messages
        id: extract-issues
        run: |
          ISSUES=""
          for COMMIT in ${{ steps.get-commits.outputs.commits }}; do
            # Extract issue numbers from commit messages using patterns like "Fixes #123", "Closes #456", etc.
            COMMIT_ISSUES=$(git log --format="%B" -n 1 $COMMIT | grep -o -E '(close|closes|closed|fix|fixes|fixed|resolve|resolves|resolved)\s+#[0-9]+' | grep -o -E '#[0-9]+' | tr -d '#' | tr '\n' ' ')
            ISSUES="$ISSUES $COMMIT_ISSUES"
          done
          
          # Also extract issue numbers from branch name (feature/ISSUE-123-description)
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
            if [[ $BRANCH_NAME =~ feature/([A-Z]+-[0-9]+) ]]; then
              ISSUES="$ISSUES ${BASH_REMATCH[1]}"
            fi
          fi
          
          echo "issues=$ISSUES" >> $GITHUB_OUTPUT

      - name: Close issues
        if: steps.extract-issues.outputs.issues != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNums = '${{ steps.extract-issues.outputs.issues }}'.trim().split(/\s+/);
            for (const issueNum of issueNums) {
              if (issueNum) {
                try {
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: parseInt(issueNum),
                    state: 'closed'
                  });
                  
                  const commentBody = `âœ… This issue has been automatically closed

The associated feature has been merged into the develop branch and all tests have passed.

**Merged by:** ${context.actor}
**Merge time:** ${new Date().toISOString()}
`;
                  
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: parseInt(issueNum),
                    body: commentBody
                  });
                  
                  console.log(`Closed issue #${issueNum}`);
                } catch (error) {
                  console.error(`Error closing issue #${issueNum}: ${error}`);
                }
              }
            }